<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.bookhub.main.mapper.AladinMapper">

    <insert id="insertBook" parameterType="com.example.bookhub.product.vo.Book">
        <selectKey keyProperty="bookNo" order="AFTER" resultType="Long">
            SELECT LAST_INSERT_ID() AS no
        </selectKey>
        INSERT INTO BOOK
        (BOOK_NAME, ISBN, BOOK_DESCRIPTION, BOOK_DISCOUNT_RATE, BOOK_DISCONTINUING_YN, BOOK_PUBLISHED_DATE, BOOK_LIST_PRICE, CATEGORY_NO, PUBLISHER_NO)
        VALUES
            (#{name}, #{isbn}, #{description}, #{discountRate}, #{discontinuingYn}, #{publishedDate}, #{price}, #{category.categoryNo}, #{publisher.publisherNo})
    </insert>

    <insert id="insertBookImage" parameterType="map">
        INSERT INTO BOOK_IMAGES (BOOK_NO, BOOK_IMAGE_COVER)
        VALUES (#{bookNo}, #{cover})
    </insert>


    <insert id="insertPublisher" parameterType="com.example.bookhub.product.vo.Publisher">
        insert into PUBLISHER(PUBLISHER_NAME) VALUES(#{name})
    </insert>

    <select id="getPublisherByName" parameterType="string" resultType="com.example.bookhub.product.vo.Publisher">
        SELECT PUBLISHER_NO as publisherNo, PUBLISHER_NAME as name
        FROM PUBLISHER
        WHERE PUBLISHER_NAME = #{value}
    </select>

    <insert id="insertAuthor" parameterType="com.example.bookhub.product.vo.Author">
        insert into AUTHOR(AUTHOR_NAME) VALUES(#{name})
    </insert>

    <insert id="insertBookAuthor" parameterType="map">
        INSERT INTO BOOK_AUTHOR (BOOK_NO, AUTHOR_NO, AUTHOR_TYPE)
        VALUES (#{bookNo}, #{no}, #{type})
    </insert>

    <select id="getAuthorByName" parameterType="string" resultType="com.example.bookhub.product.vo.Author">
        SELECT AUTHOR_NO as authorNo, AUTHOR_NAME as name
        FROM AUTHOR
        WHERE AUTHOR_NAME = #{value}
    </select>

    <select id="getBestSeller10"  parameterType="com.example.bookhub.main.dto.SearchCriteria" resultMap="bookResultMap">
        SELECT
        A.BOOK_NO,
        B.BOOK_NAME,
        (SELECT GROUP_CONCAT(Y.AUTHOR_NAME SEPARATOR ', ')
        FROM BOOK_AUTHOR X, AUTHOR Y
        WHERE X.AUTHOR_NO = Y.AUTHOR_NO
        AND X.BOOK_NO = B.BOOK_NO) AUTHORS,
        C.PUBLISHER_NAME,
        D.BOOK_IMAGE_COVER,
        A.AMOUNT
        FROM (SELECT B.BOOK_NO, SUM(B.COUNT) AMOUNT
        FROM BUY A, BUY_BOOK B, BOOK C


            <if test="cateKeyword != 0">
                AND C.CATEGORY_NO = #{cateKeyword}
            </if>
            <if test="cateKeyword == 0">
                AND C.CATEGORY_NO IN (SELECT CATEGORY_NO
                FROM CATEGORY
                WHERE PARENT_CATEGORY_NO = 1)
            </if>

        AND A.BUY_NO = B.BUY_NO
        AND B.BOOK_NO = C.BOOK_NO
        GROUP BY B.BOOK_NO
        ORDER BY AMOUNT DESC
        LIMIT 1, 10) A, BOOK B, PUBLISHER C, BOOK_IMAGES D
        WHERE A.BOOK_NO = B.BOOK_NO
        AND B.PUBLISHER_NO = C.PUBLISHER_NO
        AND B.BOOK_NO = D.BOOK_NO

    </select>

    <!--조회 결과 집합을 객체로 매핑-->
    <resultMap id="bookResultMap" type="com.example.bookhub.main.dto.BookDto">
        <id column="BOOK_NO" property="no" />
        <result column="BOOK_NAME" property="name"/>
        <result column="BOOK_IMAGE_COVER" property="cover"/>
        <collection property="authors" ofType="com.example.bookhub.main.dto.BookAuthorDto">
            <id column="AUTHOR_NO" property="no"></id>
            <result column="AUTHOR_NAME" property="name"></result>
            <result column="AUTHOR_TYPE" property="type"></result>
        </collection>
    </resultMap>


</mapper>