<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.bookhub.admin.mapper.DashBoardMapper">

    <!-- 총 유저수 -->
    <select id="getAllUserCnt" resultType="int">
        select COUNT(*) AS CNT
        from USER
    </select>

    <!-- 책의 총 권 수 -->
    <select id="getAllBookCnt" resultType="int">
        select COUNT(DISTINCT BOOK.BOOK_NAME) as CNT
        from BOOK
    </select>


    <!-- BUY 테이블에서 어제날자의 판매합계값을 통계테이블(DAY)로 저장 -->
    <insert id="saveTotalYesterday">
        INSERT INTO DAY_TOTAL (DAY_TOTAL_DATE, DAY_TOTAL_PRICE)
        SELECT DATE_FORMAT(BUY_DATE, '%Y-%m-%d') AS DAY_TOTAL_DATE, SUM(TOTAL_PRICE)
        FROM BUY
        WHERE DATE_FORMAT(BUY_DATE, '%Y-%m-%d') = DATE_SUB(CURDATE(), INTERVAL 1 DAY)
        GROUP BY DATE_FORMAT(BUY_DATE, '%Y-%m-%d')
    </insert>

    <!-- 최근 7일치의 데이터를 출력  -->
    <select id="getTotalDate" resultType="com.example.bookhub.admin.dto.DayTotalDto">
        SELECT * FROM (
            SELECT DAY_TOTAL_DATE AS dayTotalDate, DAY_TOTAL_PRICE AS dayTotalPrice
            FROM BookHub.DAY_TOTAL
            ORDER BY DAY_TOTAL_DATE DESC
            LIMIT 7
        ) AS recent_data
        ORDER BY dayTotalDate ASC
    </select>

    <!-- 해당하는 날짜의 값을 받아서 그 해당하는 날짜의 결과 출력 -->
    <select id="getYesterDay" resultType="com.example.bookhub.admin.dto.DayTotalDto" parameterType="String">
        SELECT DAY_TOTAL_DATE AS dayTotalDate, DAY_TOTAL_PRICE AS dayTotalPrice
        FROM DAY_TOTAL
        WHERE DAY_TOTAL_DATE = #{value}
    </select>

    <!--
        DAY_TOTAL 테이블에서 월요일날 실행된다는 가정하에
        지난주 일요일~토요일 합계를 계산하여 통계테이블(WEEK) 저장
        WEEK_TOTAL_DATE의 값은 해당 월의 몇번째 주인지 저장(EX. 4월의 3번째 주인 경우 = 2024-04-3)
    -->
    <insert id="saveTotalLastWeek">
        INSERT INTO WEEK_TOTAL (WEEK_TOTAL_DATE, WEEK_TOTAL_PRICE)
        SELECT
        CONCAT(
        DATE_FORMAT(DAY_TOTAL_DATE, '%Y-%m-'),
        FLOOR((DAYOFMONTH(DAY_TOTAL_DATE) + DAYOFWEEK(DATE_FORMAT(DAY_TOTAL_DATE, '%Y-%m-01')) - 2) / 7) + 1
        ) AS START_DATE,
        SUM(DAY_TOTAL_PRICE) AS TOTAL_PRICE
        FROM DAY_TOTAL
        WHERE DAY_TOTAL_DATE >= DATE_SUB(CURDATE(), INTERVAL DAYOFWEEK(CURDATE())+6 DAY)
        AND DAY_TOTAL_DATE &lt; DATE_SUB(CURDATE(), INTERVAL DAYOFWEEK(CURDATE()) DAY)
        GROUP BY START_DATE
    </insert>

    <!-- 답변 미완료된 문의 수 -->
    <select id="noAnswerCnt" resultType="int">
        SELECT count(*)
        FROM INDIVIDUAL_INQUIRIES i
        WHERE i.INDIVIDUAL_INQUIRY_ANSWER_YN = 0
          AND i.INDIVIDUAL_INQUIRY_DELETE_YN = 0
    </select>

    <!-- 답변 완료된 문의 수 -->
    <select id="answerCnt" resultType="int">
        SELECT count(*)
        FROM INDIVIDUAL_INQUIRIES i
        WHERE i.INDIVIDUAL_INQUIRY_ANSWER_YN = 1
          AND i.INDIVIDUAL_INQUIRY_DELETE_YN = 0
    </select>

    <!-- 관리자 홈에서 리뷰 데이터(최근 5개) 갖고오는 쿼리 -->
    <select id="getReview" resultType="com.example.bookhub.admin.dto.ReviewDto">
        select r.comment as reviewComment,
               u.user_name as "userName.name",
               r.updated_date as reviewUpdateDate,
               b.book_name as "bookName.name"
        from BookHub.REVIEW r
                 join BookHub.USER u on r.user_no = u.user_no
                 join BookHub.BOOK b ON b.book_no = r.book_no
        order by r.updated_date desc
        LIMIT 5
    </select>

    <!-- 리뷰/평점 평균(최근 5개) 구해주는 쿼리 -->
    <select id="averageRate" resultType="float">
        SELECT AVG(rate)
        FROM (
            SELECT rate
            FROM BookHub.REVIEW
            ORDER BY updated_date DESC
            LIMIT 5
        ) AS subquery
    </select>

    <!-- 답변 미완료된 비율을 구하는 쿼리 -->
    <select id="noAnswerRatio" resultType="int">
        SELECT
            (COUNT(*) - COUNT(CASE WHEN i.INDIVIDUAL_INQUIRY_ANSWER_YN = 1 THEN 1 END)) * 100.0 / COUNT(*) AS completion_rate
        FROM
            BookHub.INDIVIDUAL_INQUIRIES i
                JOIN BookHub.USER u ON i.INQUIRY_USER_NO = u.user_no
                JOIN BookHub.CATEGORY c ON i.INQUIRY_CATEGORY_NO
        WHERE
            i.INDIVIDUAL_INQUIRY_DELETE_YN = 0;
    </select>

    <!-- 답변 완료된 비율을 구하는 쿼리 -->
    <select id="answerRatio" resultType="int">
        SELECT
            (COUNT(CASE WHEN i.INDIVIDUAL_INQUIRY_ANSWER_YN = 1 THEN 1 END) / COUNT(*)) * 100.0 AS completion_rate
        FROM
            BookHub.INDIVIDUAL_INQUIRIES i
                JOIN BookHub.USER u ON i.INQUIRY_USER_NO = u.user_no
                JOIN BookHub.CATEGORY c ON i.INQUIRY_CATEGORY_NO
        WHERE
            i.INDIVIDUAL_INQUIRY_DELETE_YN = 0;

    </select>

    <select id="getRatio" resultType="com.example.bookhub.admin.dto.ratioDto">
        SELECT
            (SELECT (COUNT(CASE WHEN i.INDIVIDUAL_INQUIRY_ANSWER_YN = 1 THEN 1 END)) * 100 / COUNT(*)
             FROM BookHub.INDIVIDUAL_INQUIRIES i
                      JOIN BookHub.USER u ON i.INQUIRY_USER_NO = u.user_no
                      JOIN BookHub.CATEGORY c ON i.INQUIRY_CATEGORY_NO
             WHERE i.INDIVIDUAL_INQUIRY_DELETE_YN = 0) AS complete,

            (SELECT (COUNT(*) - COUNT(CASE WHEN i.INDIVIDUAL_INQUIRY_ANSWER_YN = 1 THEN 1 END)) * 100 / COUNT(*)
             FROM BookHub.INDIVIDUAL_INQUIRIES i
                      JOIN BookHub.USER u ON i.INQUIRY_USER_NO = u.user_no
                      JOIN BookHub.CATEGORY c ON i.INQUIRY_CATEGORY_NO
             WHERE i.INDIVIDUAL_INQUIRY_DELETE_YN = 0) AS incomplete
    </select>



</mapper>