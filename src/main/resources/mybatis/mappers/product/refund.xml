<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.bookhub.product.mapper.RefundMapper">

    <resultMap id="BuyDetailMap" type="com.example.bookhub.product.vo.Buy">
        <id column="buy_no" property="buyNo"/>
        <result column="total_price" property="totalPrice"/>
        <result column="total_book_discount_amount" property="totalBookDiscountAmount"/>
        <result column="total_point_use_amount" property="totalPointUseAmount"/>
        <result column="final_price" property="finalPrice"/>
        <result column="point_accumulation_amount" property="pointAccumulationAmount"/>
        <result column="buy_date" property="buyDate"/>
        <result column="gift" property="gift"/>
        <result column="order_id" property="orderId"/>
    </resultMap>

    <select id="getBuyByBuyNo" parameterType="long" resultMap="BuyDetailMap">
        select buy_no,
               total_price,
               total_book_discount_price,
               total_coupon_discount_amount,
               total_point_use_amount,
               final_price,
               point_accumulation_amount,
               buy_date,
               gift,
               order_id
        from BUY
        where buy_no = #{value}
    </select>

    <select id="createRefund" parameterType="com.example.bookhub.product.vo.Refund">
        insert into REFUND
            (buy_no, user_no)
        values
            (#{buy.buyNo}, #{user.no})
    </select>

    <update id="updateRefundYn" parameterType="long">
        update
            BUY
        set
            refund_yn = 'Y'
        where
            buy_no = #{value}
    </update>

    <select id="getCouponProducedNosByBuyNo" parameterType="long" resultType="long">
        select
            coupon_produced_no
        from
            COUPON_USED
        where
            buy_no = #{value}
    </select>

    <delete id="deleteCouponUsedByBuyNo" parameterType="long">
        delete from
            COUPON_USED
        where
            buy_no = #{value}
    </delete>

    <update id="updateCouponProducedUsedByBuyNo" parameterType="long">
        update
            COUPON_PRODUCED
        set
            used = 'N'
        where
            coupon_produced_no = #{value}
    </update>

    <update id="updatePointUsedByUserNo">
        update
            USER
        set
            user_point = user_point + #{totalPointUseAmount}
        where
            user_no = #{userNo}
    </update>

    <update id="refundPartBuy" parameterType="map">
        update
            BUY
        set
            total_price = total_price - #{totalReturnPrice},
            total_book_discount_price = total_book_discount_price - #{totalBookDiscountReturnPrice},
            final_price = final_price - #{finalReturnPrice}
        where
            buy_no = #{buyNo}
    </update>

    <update id="refundPartBuyBook">
        update
            BUY_BOOK
        set
            count = count - #{count}
        where
            buy_no = #{buyNo}
            and book_no = #{bookNo}
    </update>

    <delete id="deleteRefundBuyBook">
        delete from
            BUY_BOOK
        where
            count = 0;
    </delete>
</mapper>