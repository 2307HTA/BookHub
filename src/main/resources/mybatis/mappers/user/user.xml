<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.bookhub.user.mapper.UserMapper">

    <resultMap id="UserResultMap" type="com.example.bookhub.user.vo.User">
        <id column="user_no" property="no" />
        <result column="user_id" property="id" />
        <result column="user_password" property="password" />
        <result column="user_name" property="name" />
        <result column="user_email" property="email" />
        <result column="user_created_date" property="createdDate" />
        <result column="user_updated_date" property="updatedDate" />
        <result column="user_tel" property="tel" />
        <result column="user_zip_code" property="zipCode" />
        <result column="user_address" property="address" />
        <result column="user_address_detail" property="addressDetail" />
        <result column="user_del_yn" property="delYn" />
    </resultMap>



    <insert id="insertUser" parameterType="com.example.bookhub.user.vo.User">
        insert into USER (
        user_id ,
        user_password ,
        user_name ,
        user_email ,
        user_tel ,
        user_zip_code ,
        user_address,
        user_address_detail
        ) values (
                  #{id} ,
                  #{password} ,
                  #{name} ,
                  #{email},
                  #{tel} ,
                  #{zipCode},
                  #{address},
                  #{addressDetail}
        )
    </insert>



<!--    <insert id="insertUser" parameterType="com.example.bookhub.user.dto.UserSignupForm">-->
<!--        insert into user-->
<!--        ( user_id , user_password , user_name , user_email ,-->
<!--          user_tel ,user_zip_code , user_address, user_address_detail )-->
<!--        values-->
<!--            ( #{id} , #{password} , #{name} , #{email} ,-->
<!--             <foreach collection="ArrTel" item="tell" open="" separator="-">-->
<!--                #{tell}-->
<!--            </foreach>-->
<!--        ,-->
<!--              #{zipCode}, #{address}, #{addressDetail}, )-->
<!--    </insert>-->

    <!-- 로그인 아이디 비밀번호로 사용자 정보 가져오기-->
    <select id="loginByIdAndPassword" parameterType="map" resultType="com.example.bookhub.user.vo.User">
        SELECT user_no              as no,
               user_id              as id,
               user_password        as password,
               user_name            as name,
               user_email           as email,
               user_tel             as tel,
               user_zip_code        as zipCode,
               user_address         as address,
               user_address_detail  as addressDetail,
               user_created_date    as createdDate,
               user_updated_date    as updatedDate
        FROM USER
        WHERE user_id = #{id}
          AND user_password = #{password}
    </select>


    <select id="selectUserByNo" parameterType="long" resultType="com.example.bookhub.user.vo.User">
        SELECT
               u.user_no              as no,
               u.user_id              as id,
               u.user_password        as password,
               u.user_name            as name,
               u.user_email           as email ,
               u.user_tel             as tel ,
               u.user_zip_code        as zipCode ,
               u.user_address         as address ,
               u.user_address_detail  as addressDetail ,
               u.user_created_date    as createdDate,
               u.user_updated_date    as updatedDate ,
               u.user_del_yn          as delYn ,
               u.user_point           as point,
               g.grade_no             as "userGrade.no",
               g.grade_name           as "userGrade.name"
        FROM USER u , USER_GRADE g
        WHERE user_no = #{no}
        and user_del_yn = 'N'
        and u.grade_no = g.grade_no
    </select>

    <select id="selectUserById" parameterType="string" resultType="com.example.bookhub.user.vo.User">
        SELECT
               u.user_no              as no,
               u.user_id              as id,
               u.user_password        as password,
               u.user_name            as name,
               u.user_email           as email ,
               u.user_tel             as tel ,
               u.user_zip_code        as zipCode ,
               u.user_address         as address ,
               u.user_address_detail  as addressDetail ,
               u.user_created_date    as createdDate,
               u.user_updated_date    as updatedDate ,
               u.user_del_yn          as delYn ,
               u.user_point           as point,
               g.grade_no             as "userGrade.no",
               g.grade_name           as "userGrade.name"
        FROM USER u , USER_GRADE g
        WHERE user_id = #{id}
--         and user_del_yn = 'N'
        and u.grade_no = g.grade_no
    </select>




    <!-- 아이디 중복 체크 -->
    <select id="idCheck" parameterType="String" resultType="int">
        select count(user_id)
        from USER
        where user_id = #{id}
    </select>

    <!--이메일 중복 체크 -->
    <select id="emailCheck" parameterType="String" resultType="int">
        select count(user_email)
        from USER
        where user_email = #{email}
    </select>

    <!-- 회원 정보 변경 -->
    <update id="updateUser" parameterType="com.example.bookhub.user.vo.User">
        update USER
        set
            user_email = #{email},
            user_tel = #{tel},
            user_zip_code = #{zipCode},
            user_address = #{address},
            user_address_detail = #{addressDetail}
        WHERE user_id = #{id}
    </update>

    <select id="selectUserByIdAndEmail" resultType="com.example.bookhub.user.vo.User">
        SELECT
            u.user_no              as no,
               u.user_id              as id,
               u.user_password        as password,
               u.user_name            as name,
               u.user_email           as email ,
               u.user_tel             as tel ,
               u.user_zip_code        as zipCode ,
               u.user_address         as address ,
               u.user_address_detail  as addressDetail ,
               u.user_created_date    as createdDate,
               u.user_updated_date    as updatedDate ,
               u.user_del_yn          as delYn ,
               u.user_point           as point,
               g.grade_no             as "userGrade.no",
               g.grade_name           as "userGrade.name"
        FROM USER u , USER_GRADE g
        WHERE user_id = #{id}
          and user_email = #{email}
          and user_del_yn = 'N'
          and u.grade_no = g.grade_no
    </select>


    <!-- 랜덤한 비밀번호로 받아서 변경하기 -->
    <update id="updateResetPassword">
        UPDATE USER
        SET USER_PASSWORD = #{password}
        WHERE USER_ID = #{id}
    </update>

</mapper>